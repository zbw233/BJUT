Index: configs/common/Options.py
===================================================================
--- configs/common/Options.py	(revision be28d96510e0e722db83b26f1a12d3f5de979b32)
+++ configs/common/Options.py	(revision )
@@ -222,6 +222,8 @@
         help="switch from timing to Detailed CPU after warmup period of <N>")
     parser.add_option("-p", "--prog-interval", type="str",
         help="CPU Progress Interval")
+    parser.add_option("--two-phase", action="store",
+                      help="switch from atomic to timing CPU after kernel boots")
 
     # Fastforwarding and simpoint related materials
     parser.add_option("-W", "--warmup-insts", action="store", type="int",
Index: configs/common/Simulation.py
===================================================================
--- configs/common/Simulation.py	(revision be28d96510e0e722db83b26f1a12d3f5de979b32)
+++ configs/common/Simulation.py	(revision )
@@ -78,7 +78,7 @@
         if options.restore_with_cpu != options.cpu_type:
             CPUClass = TmpClass
             TmpClass, test_mem_mode = getCPUClass(options.restore_with_cpu)
-    elif options.fast_forward:
+    elif options.fast_forward or options.two_phase:
         CPUClass = TmpClass
         TmpClass = AtomicSimpleCPU
         test_mem_mode = 'atomic'
@@ -639,6 +639,9 @@
             print "Switch at instruction count:%s" % \
                     str(testsys.cpu[0].max_insts_any_thread)
             exit_event = m5.simulate()
+        elif options.two_phase:
+            print "Switch after kernel boots"
+            exit_event = m5.simulate()
         else:
             print "Switch at curTick count:%s" % str(10000)
             exit_event = m5.simulate(10000)
@@ -688,7 +691,7 @@
         restoreSimpointCheckpoint()
 
     else:
-        if options.fast_forward:
+        if options.fast_forward or options.two_phase:
             m5.stats.reset()
         print "**** REAL SIMULATION ****"
 
Index: configs/common/Benchmarks.py
===================================================================
--- configs/common/Benchmarks.py	(revision be28d96510e0e722db83b26f1a12d3f5de979b32)
+++ configs/common/Benchmarks.py	(revision )
@@ -49,13 +49,13 @@
         if self.memsize:
             return self.memsize
         else:
-            return '128MB'
+            return '512MB'
 
     def disk(self):
         if self.diskname:
             return disk(self.diskname)
         elif buildEnv['TARGET_ISA'] == 'alpha':
-            return env.get('LINUX_IMAGE', disk('linux-latest.img'))
+            return env.get('LINUX_IMAGE', disk('linux-parsec-2-1-m5-with-test-inputs.img'))
         elif buildEnv['TARGET_ISA'] == 'x86':
             return env.get('LINUX_IMAGE', disk('x86root.img'))
         elif buildEnv['TARGET_ISA'] == 'arm':
Index: configs/common/SysPaths.py
===================================================================
--- configs/common/SysPaths.py	(revision be28d96510e0e722db83b26f1a12d3f5de979b32)
+++ configs/common/SysPaths.py	(revision )
@@ -57,7 +57,7 @@
         try:
             path = env['M5_PATH'].split(':')
         except KeyError:
-            path = [ '/dist/m5/system', '/n/poolfs/z/dist/m5/system' ]
+            path = [ '/dist/m5/system', '../gem5_extras/system' ]
 
         # expand '~' and '~user' in paths
         path = map(os.path.expanduser, path)
Index: configs/common/FSConfig.py
===================================================================
--- configs/common/FSConfig.py	(revision be28d96510e0e722db83b26f1a12d3f5de979b32)
+++ configs/common/FSConfig.py	(revision )
@@ -127,8 +127,8 @@
     self.intrctrl = IntrControl()
     self.mem_mode = mem_mode
     self.terminal = Terminal()
-    self.kernel = binary('vmlinux')
-    self.pal = binary('ts_osfpal')
+    self.kernel = binary('vmlinux_2.6.27-gcc_4.3.4')
+    self.pal = binary('tsb_osfpal')
     self.console = binary('console')
     if not cmdline:
         cmdline = 'root=/dev/hda1 console=ttyS0'
